-- Select top 10 queries for specific stored procedures based on performance metrics
SELECT TOP 10 
    query_stats.query_hash AS "Query Hash",                     -- Unique identifier for query text (ignores literals)
    query_stats.DBName,                                         -- Database where the query was executed
    query_stats.ObjectName,                                     -- Object name (e.g., stored procedure or function)

    -- CPU time calculations
    SUM(query_stats.total_worker_time) / SUM(query_stats.execution_count) AS "Avg CPU Time (micro seconds)",
    SUM(query_stats.total_worker_time) / SUM(query_stats.execution_count) / 1000000.00 AS "Avg CPU Time (seconds)",

    -- Representative SQL statement text from captured plan
    MIN(query_stats.statement_text) AS "Statement Text",

    -- Execution metadata
    MAX(query_stats.execution_count) AS ExecutionCount,         -- Max execution count across plans
    MAX(Last_Execution_Time) AS LastExecuted,                   -- Most recent execution
    MIN(Creation_Time) AS CreationTime,                         -- When the plan was first created

    -- Elapsed time calculations
    SUM(query_stats.total_elapsed_time) / SUM(query_stats.execution_count) AS "Avg Elapsed Time (micro seconds)",
    SUM(query_stats.total_elapsed_time) / SUM(query_stats.execution_count) / 1000000.00 AS "Avg Elapsed Time (seconds)",

    -- I/O metrics
    SUM(query_stats.total_physical_reads) / SUM(query_stats.execution_count) AS "Avg PhysicalReads",
    SUM(query_stats.total_logical_reads) / SUM(query_stats.execution_count) AS "Avg LogicalReads",
    SUM(query_stats.total_logical_writes) / SUM(query_stats.execution_count) AS "Avg LogicalWrites",

    -- Total impact metric (estimated total time spent)
    (MAX(query_stats.execution_count) * (SUM(query_stats.total_elapsed_time) / SUM(query_stats.execution_count))) / 1000000.00 AS "TotalAvgTime(Seconds)",

    -- Worst-case execution duration
    MIN(query_stats.max_elapsed_time) / 1000000.00 AS MaxElapsedTimeInSeconds

FROM (
    -- Subquery to get relevant fields from query stats and their SQL text
    SELECT 
        QS.*, 
        SUBSTRING(
            ST.text, 
            (QS.statement_start_offset / 2) + 1,
            (
                (CASE statement_end_offset 
                    WHEN -1 THEN DATALENGTH(ST.text)
                    ELSE QS.statement_end_offset 
                END - QS.statement_start_offset) / 2
            ) + 1
        ) AS statement_text,
        DB_NAME(ST.dbid) AS DBName,
        OBJECT_NAME(ST.objectid) AS ObjectName
    FROM sys.dm_exec_query_stats AS QS
    CROSS APPLY sys.dm_exec_sql_text(QS.sql_handle) AS ST
    -- Optional filter to limit to recent plans
    -- WHERE QS.creation_time >= '2014-12-17 12:30:00'
) AS query_stats

-- Filters for specific database and stored procedures
WHERE query_stats.DBName = [DB_NAME]                             -- Replace [DB_NAME] with actual DB name
  AND query_stats.ObjectName IN ([STORED_PROC_NAMES])            -- Replace [STORED_PROC_NAMES] with quoted procedure names

-- Grouping ensures aggregation per query_hash per stored procedure
GROUP BY query_stats.DBName, query_stats.ObjectName, query_stats.query_hash

-- Optional filters:
-- HAVING MAX(query_stats.execution_count) > 1                    -- To exclude queries that ran only once

-- Optional ORDER BY:
-- ORDER BY 10 DESC; -- Avg Elapsed Time
-- ORDER BY 13 DESC; -- Logical Reads
-- ORDER BY 4 DESC;  -- CPU Time
-- ORDER BY 7 DESC;  -- Execution Count

-- Final ordering: by object name, then descending by TotalAvgTime
ORDER BY 3, 15 DESC;
